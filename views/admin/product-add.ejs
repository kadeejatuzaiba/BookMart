<%- include("../../views/partials/admin/header") %>

<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

<style>
  .error-message { color: red; font-size: 0.9rem; }
  .thumbnail-wrapper {
    position: relative;
    width: 120px;
    height: 120px;
    margin-right: 15px;
  }
  .thumbnail-wrapper img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 6px;
  }
  .remove-image {
    position: absolute;
    top: -5px;
    right: -5px;
    background: red;
    color: white;
    border-radius: 50%;
    padding: 2px 6px;
    cursor: pointer;
    font-size: 0.75rem;
  }
  .image-cropper {
    display: none;
    max-width: 300px;
    margin-top: 10px;
  }
</style>

<section class="content-main">
  <div class="row">
    <div class="col-12 col-lg-8">
      <div class="card mb-4">
        <div class="card-body">
          <h2 class="content-title mb-4">Add New Product</h2>
          <form method="POST" id="productForm" action="/admin/addProduct" enctype="multipart/form-data" onsubmit="return validateForm()">

            <!-- Product Info -->
            <div class="mb-3">
              <label>Product Name</label>
              <input name="productName" class="form-control" />
              <div id="productName-error" class="error-message"></div>
            </div>

            <div class="mb-3">
              <label>Author</label>
              <input name="author" class="form-control" />
              <div id="author-error" class="error-message"></div>
            </div>

            <div class="mb-3">
              <label>Description</label>
              <textarea name="description" rows="3" class="form-control"></textarea>
              <div id="description-error" class="error-message"></div>
            </div>

            <!-- Pricing -->
            <div class="row">
              <div class="col-md-4 mb-3">
                <label>Regular Price</label>
                <input name="regularPrice" class="form-control" />
                <div id="regularPrice-error" class="error-message"></div>
              </div>
              <div class="col-md-4 mb-3">
                <label>Sale Price</label>
                <input name="salePrice" class="form-control" />
                <div id="salePrice-error" class="error-message"></div>
              </div>
              <div class="col-md-4 mb-3">
                <label>Quantity</label>
                <input name="quantity" class="form-control" />
                <div id="quantity-error" class="error-message"></div>
              </div>
            </div>

            <!-- Category -->
            <div class="mb-3">
              <label>Category</label>
              <select name="category" class="form-select">
                <% cat.forEach(c => { %>
                  <option value="<%= c.name %>"><%= c.name %></option>
                <% }) %>
              </select>
              <div id="category-error" class="error-message"></div>
            </div>

            <!-- Image Upload -->
            <div class="mb-4">
              <label>Upload up to 4 images</label>
              <div class="d-flex flex-wrap" id="imagePreviewContainer"></div>
              <input type="file" id="uploadInput" class="form-control mt-2" accept="image/*" onchange="handleImage(this)" />

              <div id="images-error" class="error-message"></div>

              <div class="image-cropper mt-3">
                <img id="cropperPreview" style="max-width: 100%;" />
                <button type="button" onclick="saveCroppedImage()" class="btn btn-sm btn-primary mt-2">Crop & Save</button>
              </div>
            </div>

            <!-- Hidden Inputs for Images -->
            <div id="hiddenImageInputs"></div>

            <!-- Submit -->
            <!-- <button type="submit" onclick="publishHandle()" class="btn btn-success">Publish</button> -->

            <form id="productForm" enctype="multipart/form-data">
  <!-- Your fields here -->
  <button type="submit" class="btn btn-success">Publish</button>
</form>

          </form>
        </div>
      </div>
    </div>
  </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>


document.getElementById('productForm').addEventListener('submit', async function(e) {
  e.preventDefault(); // stop default submit

  // ❗ Validate before sending
  if (!validateForm()) {
    return; // Don't submit if invalid
  }

  const form = e.target;
  const formData = new FormData(form); // to handle file uploads

  try {
    const response = await fetch('/admin/addProduct', {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Product added successfully!',
      }).then(() => {
        window.location.href = '/admin/addProduct';
      });
    } else {
      const errorData = await response.json();
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: errorData.message || 'Something went wrong!',
      });
    }
  } catch (err) {
    console.error('Request failed', err);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Server error. Please try again later.',
    });
  }
});




  let cropper;
  let croppedBlobs = [];
  const maxImages = 4;

  function handleImage(input) {
    if (!input.files.length) return;
    if (croppedBlobs.length >= maxImages) {
      alert("Maximum 4 images allowed.");
      return;
    }

    const reader = new FileReader();
    reader.onload = () => {
      const image = document.getElementById("cropperPreview");
      image.src = reader.result;

      document.querySelector(".image-cropper").style.display = "block";

      if (cropper) cropper.destroy();
      cropper = new Cropper(image, {
        aspectRatio: 1,
        viewMode: 1
      });
    };
    reader.readAsDataURL(input.files[0]);
  }

  function saveCroppedImage() {
    if (!cropper) return;

    cropper.getCroppedCanvas().toBlob(blob => {
      croppedBlobs.push(blob);
      addPreview(blob);
      updateHiddenInputs();

      document.querySelector(".image-cropper").style.display = "none";
      cropper.destroy();
      cropper = null;
    }, "image/jpeg");
  }

  function addPreview(blob) {
    const container = document.getElementById("imagePreviewContainer");
    const wrapper = document.createElement("div");
    wrapper.className = "thumbnail-wrapper";

    const img = document.createElement("img");
    img.src = URL.createObjectURL(blob);

    const removeBtn = document.createElement("div");
    removeBtn.className = "remove-image";
    removeBtn.innerHTML = "&times;";
    removeBtn.onclick = () => {
      croppedBlobs.splice([...container.children].indexOf(wrapper), 1);
      wrapper.remove();
      updateHiddenInputs();
    };

    wrapper.appendChild(img);
    wrapper.appendChild(removeBtn);
    container.appendChild(wrapper);
  }

  function updateHiddenInputs() {
    const container = document.getElementById("hiddenImageInputs");
    container.innerHTML = "";

    croppedBlobs.forEach((blob, i) => {
      const file = new File([blob], `product-image-${i + 1}.jpg`, { type: "image/jpeg" });
      const dt = new DataTransfer();
      dt.items.add(file);

      const input = document.createElement("input");
      input.type = "file";
      input.name = "images";
      input.files = dt.files;
      input.style.display = "none";
      container.appendChild(input);
    });
  }

function validateForm() {
  let isValid = true;
  const requiredFields = ["productName", "author", "description", "regularPrice", "salePrice", "quantity", "category"];

  requiredFields.forEach(field => {
    const value = document.getElementsByName(field)[0].value.trim();
    const errorEl = document.getElementById(field + "-error");
    if (!value) {
      errorEl.innerText = `${field} is required`;
      isValid = false;
    } else {
      errorEl.innerText = "";
    }
  });

  const regularPriceValue = document.getElementsByName("regularPrice")[0].value.trim();
  const salePriceValue = document.getElementsByName("salePrice")[0].value.trim();

  const price = parseFloat(regularPriceValue);
  const sale = parseFloat(salePriceValue);

  if (regularPriceValue && (isNaN(price) || price <= 1)) {
    document.getElementById("regularPrice-error").innerText = "Regular price must be greater than ₹1";
    isValid = false;
  }

  if (regularPriceValue && salePriceValue && !isNaN(price) && !isNaN(sale) && sale > price) {
    document.getElementById("salePrice-error").innerText = "Sale price cannot exceed regular price";
    isValid = false;
  }

  // Image validation: at least 1 image (either existing or newly uploaded)
  const uploadedImages = document.getElementById('uploadInput').files;
  const existingImages = document.querySelectorAll('.thumbnail-wrapper img');
  const totalImages = uploadedImages.length + existingImages.length;

  if (totalImages < 3) {
    document.getElementById("images-error").innerText = "At least 3 images are required";
    isValid = false;
  } else {
    document.getElementById("images-error").innerText = "";
  }

  return isValid;
}

</script>

<%- include("../../views/partials/admin/footer") %>
